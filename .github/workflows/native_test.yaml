name: Native test
run-name: Native test PR${{ github.event.number }}

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - '*'
    paths-ignore:
      - 'lglpy/**'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'lglpy/**'

jobs:
  build-ubuntu-x64-clang:
    name: Ubuntu x64 Clang
    runs-on: ubuntu-22.04
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Build layer_example
        run: |
          export CC=clang
          export CXX=clang++
          mkdir layer_example/build_rel
          cd layer_example/build_rel
          cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release ..
          make -j4

      - name: Build layer_gpu_support
        run: |
          export CC=clang
          export CXX=clang++
          mkdir layer_gpu_support/build_rel
          cd layer_gpu_support/build_rel
          cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release ..
          make -j4

      - name: Build layer_gpu_timeline
        run: |
          export CC=clang
          export CXX=clang++
          mkdir layer_gpu_timeline/build_rel
          cd layer_gpu_timeline/build_rel
          cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release ..
          make -j4

      - name: Build layer_gpu_profile
        run: |
          export CC=clang
          export CXX=clang++
          mkdir layer_gpu_profile/build_rel
          cd layer_gpu_profile/build_rel
          cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release ..
          make -j4

      - name: Build and run unit tests
        run: |
          export CC=clang
          export CXX=clang++
          mkdir build_unittest
          cd build_unittest
          cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=./ ..
          make install -j4
          ./bin/unittest_comms

  build-ubuntu-x64-gcc:
    name: Ubuntu x64 GCC
    runs-on: ubuntu-22.04
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Build layer_example
        run: |
          export CC=gcc
          export CXX=g++
          mkdir layer_example/build_rel
          cd layer_example/build_rel
          cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release ..
          make -j4

      - name: Build layer_gpu_support
        run: |
          export CC=gcc
          export CXX=g++
          mkdir layer_gpu_support/build_rel
          cd layer_gpu_support/build_rel
          cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release ..
          make -j4

      - name: Build layer_gpu_timeline
        run: |
          export CC=gcc
          export CXX=g++
          mkdir layer_gpu_timeline/build_rel
          cd layer_gpu_timeline/build_rel
          cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release ..
          make -j4

      - name: Build layer_gpu_profile
        run: |
          export CC=gcc
          export CXX=g++
          mkdir layer_gpu_profile/build_rel
          cd layer_gpu_profile/build_rel
          cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release ..
          make -j4

  build-android:
    name: Android
    runs-on: ubuntu-22.04
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Build layer_example
        run: |
          cd layer_example
          bash ./android_build.sh Release

      - name: Build layer_gpu_support
        run: |
          cd layer_gpu_support
          bash ./android_build.sh Release

      - name: Build layer_gpu_timeline
        run: |
          cd layer_gpu_timeline
          bash ./android_build.sh Release

      - name: Build layer_gpu_profile
        run: |
          cd layer_gpu_profile
          bash ./android_build.sh Release

  build-ubuntu-x64-clang-new-common:
    name: Ubuntu x64 generate common
    runs-on: ubuntu-22.04
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Generate layer_test
        run: |
          python3 ./generator/generate_vulkan_common.py
          mkdir layer_example/build_rel
          cd layer_example/build_rel
          cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release ..
          make -j4

      - name: Check unexpected diffs
        run: |
          git diff --exit-code

  build-ubuntu-x64-clang-new-project:
    name: Ubuntu x64 generate new layer
    runs-on: ubuntu-22.04
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Generate layer_test
        run: |
          python3 ./generator/generate_vulkan_common.py
          python3 ./generator/generate_vulkan_layer.py --project-name Test --layer-name VkLayerTest --output layer_test
          mkdir layer_test/build_rel
          cd layer_test/build_rel
          cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release ..
          make -j4
